@page "/login"
@using System.ComponentModel.DataAnnotations
@using Domain.Entities
@using Domain.Interfaces
@using Domain.DTO.Request
@using Microsoft.AspNetCore.Identity

@inject IAccountService AccountService
@inject SignInManager<User> SignInManager
@inject NavigationManager Nav

<h1>Login</h1>
<div class="row">
    <div class="col-md-4">
        <MudAlert Severity="Severity.Success" Variant="Variant.Filled">The reactor is running at optimum temperature</MudAlert>
        <section>
            <EditForm Model="Input" method="post" OnValidSubmit="OnLogin" FormName="Login">
                <DataAnnotationsValidator />
                <hr />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" class="form-control" aria-required="true" />
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" aria-required="true" />
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputCheckbox @bind-Value="Input.RememberMe" />
                    Remember me
                </div>
                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Login</button>
                </div>
            </EditForm>
        </section>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await AccountService.RegisterUser(new RegisterUserRequest
            {
                Email = "test@gmail.com",
                Role = "Admin"
            });
    }

    private async Task OnLogin()
    {
        var verify = await AccountService.VerifyUser(Input.Email, Input.Password);
        if (!verify.IsSuccess)
        {
            return;
        }
        await SignInManager.PasswordSignInAsync(verify.Value, Input.Password, Input.RememberMe, false);
        Nav.NavigateTo("/");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; }

        public bool RememberMe { get; set; }
    }
}
